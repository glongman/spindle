<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.iw.plugins.spindle.core">
<annotation>
      <appInfo>
         <meta.schema plugin="com.iw.plugins.spindle.core" id="componentTypeResolver" name="Component Type Resolvers"/>
      </appInfo>
      <documentation>
         &lt;p&gt;Tapestry allows page/component &quot;classes&quot; to be in languages other than Java. Some implementations use a base class that in turn invokes code in some other language. This extension gives developers the opportunity to override the default (Java type only) resolution with thier own. Contributed extensions can resolve any file in the project (or in a project jar file) to be the &quot;class&quot; for a particular page or component.
&lt;/p&gt;&lt;p&gt;
Last point, every contribution to this extension will slow down the build. Use sparingly.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="resolver" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="resolver">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  a type that implements com.iw.plugins.spindle.core.extensions.IComponentTypeResolver
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.iw.plugins.spindle.core.extensions.IComponentTypeResolver"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         Spindle 3.1.9
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         See com.iw.plugins.spindle.core.extensions.IComponentTypeResourceResolver
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         Each contributed class is instantiated once and reused.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright 2004, Intelligent Works Incorporated.
      </documentation>
   </annotation>

</schema>
